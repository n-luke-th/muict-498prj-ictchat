# Start from Python base image
FROM python:3.11.8

# Set the current working directory to /home/app
WORKDIR /home/app

# Uncomment and fill in your account if you are working under MU network
# ENV http_proxy "http://<USER>:<PASSWD>@proxy-sa.mahidol:8080"
# ENV https_proxy "http://<USER>:<PASSWD>@proxy-sa.mahidol:8080"
# ENV ftp_proxy "http://<USER>:<PASSWD>@proxy-sa.mahidol:8080"
# ENV no_proxy "localhost,127.0.0.1,::1"

# Project files from the local directory to the image
COPY src/ /home/app/src/
COPY requirements.ui.txt /home/app/
COPY .env /home/app/
# remove apis folder
RUN bash -c "rm -rf /home/app/src/apis"

# force run using bash
SHELL ["/bin/bash", "-c"]

# Setup Miniconda
ENV PATH /opt/conda/bin:$PATH
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py311_24.3.0-0-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

# Install Python packages
RUN pip --no-cache-dir install --upgrade pip
RUN pip --no-cache-dir install -r /home/app/requirements.ui.txt

# expose port to docker container network
EXPOSE 8501

# HEALTHCHECK to check that it is still working
HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health

# Start Streamlit
CMD ["streamlit", "run", "src/ui/main.py", "--server.port=8501", "--server.address=0.0.0.0"]